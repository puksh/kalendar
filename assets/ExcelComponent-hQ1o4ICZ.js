import{d as S,M as h,c as E,s as M,v as P,a as w}from"./shiftManagement-CXvRfEnl.js";import{N as O,a as g,_ as v}from"./utils-BO-MB2ZG.js";import{i as m,g as T}from"./index-DY7hY_Hh.js";import{c as d,o as c,d as u,F as C,a as y,n as D,t as N,p as L,z as A,w as b}from"./vue-vendor-RF0o26Ul.js";const F=[{value:"",label:""},{value:"D",label:"D"},{value:"N",label:"N"},{value:"D N",label:"D N"}],I=["D","N","D N",""],R=31,_=["dayShift1","dayShift2","nightShift1","nightShift2"],p=["Milena","Mikołaj","Aleksandra","Joanna","Łukasz","Natalia","Marcin"],H={name:"SpreadsheetView",emits:["update-editing-mode","has-changes","month-days-updated"],props:{isEditingMode:{type:Boolean,required:!0},selectedMonth:{type:Number,required:!0},selectedYear:{type:Number,required:!0},people:{type:Array,required:!0}},components:{NotificationMessage:O},data(){return{editedShifts:{},monthDays:[],localData:{},daysOfWeek:S,madeChanges:!1,scrollContainer:null,isFirstColumnLocked:!1,importedCells:new Set,MESSAGES:h,SHIFT_OPTIONS:F}},computed:{daysInMonth(){return this.monthDays.map(e=>e.date.getDate())},orderedPeople(){return this.people.filter(e=>p.includes(e.name)).sort((e,t)=>p.indexOf(e.name)-p.indexOf(t.name))},lockButtonTooltip(){return this.isFirstColumnLocked?h.UNLOCK_WIDTH:h.LOCK_WIDTH},editCellAriaLabel(){return this.isEditingMode?h.CLICK_TO_EDIT:""},editCellTitle(){return this.isEditingMode?h.CLICK_TO_EDIT:""}},watch:{selectedMonth(){this.generateMonthDays()},selectedYear(){this.generateMonthDays()}},methods:{isEditing(e,t){return this.editedShifts.hasOwnProperty(`${e}-${t}`)},getShiftForPersonAndDay(e,t){const i=this.monthDays.find(n=>n.date.getDate()===t)?.date;return i?T(e,i," "):null},editCell(e,t){if(this.isEditingMode){const i=`${e}-${t}`,n=this.getShiftForPersonAndDay(e,t)||"";this.editedShifts[i]=n}},validateShiftValue(e){const t=e?.trim().toUpperCase()||"";return I.includes(t)?t:null},clearPersonFromAllShifts(e,t){_.forEach(i=>{e[i]===t&&(e[i]=null,e[i+"Name"]=h.NOT_ASSIGNED,e[i+"UserChanged"]=!0)})},validateRatownikAssignment(e,t,i){return this.people.find(r=>r.id===t)?.ratownik?i.includes("D")&&[e.dayShift1,e.dayShift2].filter(Boolean).some(a=>this.people.find(o=>o.id===a)?.ratownik&&a!==t)?(g(h.TWO_RATOWNIK_ERROR,"red"),!1):i.includes("N")&&[e.nightShift1,e.nightShift2].filter(Boolean).some(a=>this.people.find(o=>o.id===a)?.ratownik&&a!==t)?(g(h.TWO_RATOWNIK_ERROR,"red"),!1):!0:!0},assignPersonToShift(e,t,i){const n=this.people.find(r=>r.id===t);return e[i]?!1:(e[i]=t,e[i+"Name"]=n.name,e[i+"UserChanged"]=!0,!0)},assignDayShift(e,t){return this.assignPersonToShift(e,t,"dayShift1")||this.assignPersonToShift(e,t,"dayShift2")?!0:(g(h.MAX_DAY_PEOPLE,"red"),!1)},assignNightShift(e,t){return this.assignPersonToShift(e,t,"nightShift1")||this.assignPersonToShift(e,t,"nightShift2")?!0:(g(h.MAX_NIGHT_PEOPLE,"red"),!1)},saveShiftData(e,t){const i={dayShift1:e.dayShift1,dayShift2:e.dayShift2,nightShift1:e.nightShift1,nightShift2:e.nightShift2,dayShift1Name:e.dayShift1Name,dayShift2Name:e.dayShift2Name,nightShift1Name:e.nightShift1Name,nightShift2Name:e.nightShift2Name};this.localData[t]=i,localStorage.setItem(t,JSON.stringify(i)),this.madeChanges=!0,this.$emit("has-changes",this.madeChanges)},saveShift(e,t){const i=`${e}-${t}`,n=this.validateShiftValue(this.editedShifts[i]),r=this.getDateString(t);if(!r)return;const s=this.findDayByDate(r);if(!s)return;if(_.filter(f=>s[f]===e).forEach(f=>{E(s,f)}),n===""){M(s),delete this.editedShifts[i];return}const l=this.people.find(f=>f.id===e);if(!l)return;const o=(f,k)=>!s[f]&&P(s,f,e,this.people)?(w(s,f,l),!0):!s[k]&&P(s,k,e,this.people)?(w(s,k,l),!0):!1;if(n.includes("D")&&!o("dayShift1","dayShift2")){g(h.MAX_DAY_PEOPLE,"red"),delete this.editedShifts[i];return}if(n.includes("N")&&!o("nightShift1","nightShift2")){g(h.MAX_NIGHT_PEOPLE,"red"),delete this.editedShifts[i];return}M(s),delete this.editedShifts[i],this.madeChanges=!0,this.$emit("has-changes",!0)},generateMonthDays(){this.resetUserChanges();const e=this.selectedYear,t=this.selectedMonth,i=new Date(e,t+1,0).getDate();this.monthDays=[];for(let n=1;n<=i;n++)this.monthDays.push({date:new Date(e,t,n),dayShift1:null,dayShift2:null,nightShift1:null,nightShift2:null,dayShift1Name:"Not assigned",dayShift2Name:"Not assigned",nightShift1Name:"Not assigned",nightShift2Name:"Not assigned",isCurrentMonth:!0});this.loadFromLocalStorage(),this.$emit("month-days-updated",this.monthDays)},updateChanges(e){this.madeChanges=e,this.$emit("has-changes",this.madeChanges)},loadFromLocalStorage(){const{year:e,month:t}={year:this.selectedYear,month:this.selectedMonth};for(let i=1;i<=R;i++)this.loadDayFromStorage(e,t,i)},loadDayFromStorage(e,t,i){const n=new Date(e,t,i).toDateString(),r=localStorage.getItem(n);if(r)try{const s=JSON.parse(r),a=this.findDayByDate(n);a&&this.applyStoredStatesToDay(a,s)}catch(s){console.error("Failed to load local data:",s),g(h.LOAD_ERROR,"red")}},applyStoredStatesToDay(e,t){_.forEach(i=>{e[i]=t[i],e[i+"Name"]=t[i+"Name"]||h.NOT_ASSIGNED})},resetUserChanges(){this.clearUserChangesFromStorage(),this.localData={},this.editedShifts={},this.madeChanges=!1,this.$emit("has-changes",this.madeChanges)},clearUserChangesFromStorage(){const e=[];for(const t in localStorage)if(!(t==="isEditingMode"||t==="currentPage")&&localStorage.hasOwnProperty(t))try{const i=JSON.parse(localStorage.getItem(t)||"{}");_.some(r=>i[r+"UserChanged"])&&e.push(t)}catch{continue}e.forEach(t=>localStorage.removeItem(t))},isToday(e){const t=new Date;return e.getDate()===t.getDate()&&e.getMonth()===t.getMonth()&&e.getFullYear()===t.getFullYear()},isImportedCell(e,t){return this.importedCells.has(`${e}-${t}`)},toggleColumnsLocked(){this.isFirstColumnLocked=!this.isFirstColumnLocked,this.$nextTick(()=>{document.querySelectorAll(".calendar-table th:first-child, .calendar-table td:first-child").forEach(t=>{this.isFirstColumnLocked?t.classList.add("column-locked"):t.classList.remove("column-locked")})})},isHoliday(e){return m(e)},getHeaderCellClasses(e){const t=new Date(this.selectedYear,this.selectedMonth,e);return{"nd-color":S[t.getDay()]==="Nd","sob-color":S[t.getDay()]==="Sob","holiday-color":m(t).isHoliday,"today-column":this.isToday(t)}},getPersonCellClasses(e){return{ratownik:e.ratownik,pielegniarka:!e.ratownik}},getDataCellClasses(e){const t=new Date(this.selectedYear,this.selectedMonth,e);return{"nd-color":S[t.getDay()]==="Nd","sob-color":S[t.getDay()]==="Sob","holiday-color":m(t).isHoliday,today:this.isToday(t)}},getHolidayTooltip(e){const t=new Date(this.selectedYear,this.selectedMonth,e);return m(t).name||""},findDayByDate(e){return this.monthDays.find(t=>t.date.toDateString()===e)},getDateString(e){return this.monthDays.find(t=>t.date.getDate()===e)?.date.toDateString()},handleScroll(e){this.scrollContainer&&(e.preventDefault(),this.scrollContainer.scrollLeft+=e.deltaY)}},mounted(){this.resetUserChanges(),this.generateMonthDays(),this.scrollContainer=this.$refs.scrollContainer}},U={class:"spreadsheet-view"},Y={class:"calendar-table"},B=["title"],V={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",width:"24",height:"24",fill:"none",stroke:"white","stroke-width":"2"},x={key:0,d:"M12 3a4 4 0 0 0-4 4v4h8V7a4 4 0 0 0-4-4z"},W={key:1,d:"M8 11V7a4 4 0 0 1 8 0"},K=["title","aria-label"],q=["onClick","aria-label","title"],G=["onUpdate:modelValue","onChange"],X=["value"];function z(e,t,i,n,r,s){return c(),d("div",U,[u("div",{class:"scrollable-container",onWheel:t[1]||(t[1]=b((...a)=>s.handleScroll&&s.handleScroll(...a),["prevent"])),ref:"scrollContainer"},[u("table",Y,[u("thead",null,[u("tr",null,[u("th",null,[u("button",{class:"lock-column-button",onClick:t[0]||(t[0]=(...a)=>s.toggleColumnsLocked&&s.toggleColumnsLocked(...a)),title:s.lockButtonTooltip},[(c(),d("svg",V,[t[2]||(t[2]=u("rect",{x:"7",y:"11",width:"10",height:"10",rx:"1"},null,-1)),r.isFirstColumnLocked?(c(),d("path",x)):(c(),d("path",W))]))],8,B)]),(c(!0),d(C,null,y(s.daysInMonth,a=>(c(),d("th",{key:a,class:D(s.getHeaderCellClasses(a)),title:s.getHolidayTooltip(a),"aria-label":s.getHolidayTooltip(a)},N(a),11,K))),128))])]),u("tbody",null,[(c(!0),d(C,null,y(s.orderedPeople,a=>(c(),d("tr",{key:a.id},[u("td",{class:D(s.getPersonCellClasses(a))},N(a.name),3),(c(!0),d(C,null,y(s.daysInMonth,l=>(c(),d("td",{key:l,class:D(["editable-cell",s.getDataCellClasses(l)]),onClick:o=>s.editCell(a.id,l),"aria-label":s.editCellAriaLabel,title:s.editCellTitle,role:"gridcell"},[!i.isEditingMode||!s.isEditing(a.id,l)?(c(),d("span",{key:0,class:D({"imported-cell":s.isImportedCell(a.id,l)})},N(s.getShiftForPersonAndDay(a.id,l)||""),3)):L((c(),d("select",{key:1,"onUpdate:modelValue":o=>r.editedShifts[`${a.id}-${l}`]=o,onChange:o=>s.saveShift(a.id,l)},[(c(!0),d(C,null,y(r.SHIFT_OPTIONS,o=>(c(),d("option",{key:o.value,value:o.value},N(o.label),9,X))),128))],40,G)),[[A,r.editedShifts[`${a.id}-${l}`]]])],10,q))),128))]))),128))])])],544)])}const $=v(H,[["render",z],["__scopeId","data-v-7f8ba813"]]);export{$ as default};
