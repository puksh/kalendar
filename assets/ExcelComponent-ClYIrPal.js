import{d as z}from"./daysOfWeek-C19XqJ9X.js";import{_ as p,a as r,o as S,c,b as l,F as u,r as N,w as v,n as D,t as w,e as b,v as M}from"./index-BdhuNycK.js";const O={name:"SpreadsheetView",emits:["update-editing-mode","has-changes","month-days-updated"],props:{isEditingMode:{type:Boolean,required:!0},selectedMonth:{type:Number,required:!0},selectedYear:{type:Number,required:!0},people:{type:Array,required:!0}},data(){return{editedShifts:{},monthDays:[],localData:{},daysOfWeek:z,madeChanges:!1,scrollContainer:null}},computed:{daysInMonth(){return this.monthDays.map(e=>e.date.getDate())},orderedPeople(){const e=["Milena","Mikołaj","Aleksandra","Joanna","Łukasz","Natalia","Marcin"];return this.people.filter(n=>e.includes(n.name)).sort((n,i)=>e.indexOf(n.name)-e.indexOf(i.name))}},watch:{selectedMonth(){this.generateMonthDays()},selectedYear(){this.generateMonthDays()}},methods:{isEditing(e,n){return this.editedShifts.hasOwnProperty(`${e}-${n}`)},getShiftForPersonAndDay(e,n){const i=this.monthDays.find(o=>o.date.getDate()===n)?.date.toDateString(),h=localStorage.getItem(i);if(h){const o=JSON.parse(h),s=[];return(o.dayShift1===e||o.dayShift2===e)&&s.push("D"),(o.nightShift1===e||o.nightShift2===e)&&s.push("N"),s.join(" ")}return null},editCell(e,n){if(this.isEditingMode){const i=`${e}-${n}`,h=this.getShiftForPersonAndDay(e,n)||"";this.editedShifts[i]=h}},saveShift(e,n){const i=`${e}-${n}`,h=this.editedShifts[i]?.trim().toUpperCase()||"",o=this.getShiftForPersonAndDay(e,n)||"";if(!["D","N","D N",""].includes(h)){r("Zła wartość! Tylko 'D', 'N', lub 'D N' są dozwolone."),this.$nextTick(()=>{this.editedShifts[i]=o});return}const a=this.monthDays.find(f=>f.date.getDate()===n)?.date.toDateString();if(!a||!this.monthDays)return;const t=this.monthDays.find(f=>f.date.toDateString()===a);if(!t)return;if(h===""){t.dayShift1===e&&(t.dayShift1=null,t.dayShift1Name="Not assigned",t.dayShift1UserChanged=!0),t.dayShift2===e&&(t.dayShift2=null,t.dayShift2Name="Not assigned",t.dayShift2UserChanged=!0),t.nightShift1===e&&(t.nightShift1=null,t.nightShift1Name="Not assigned",t.nightShift1UserChanged=!0),t.nightShift2===e&&(t.nightShift2=null,t.nightShift2Name="Not assigned",t.nightShift2UserChanged=!0);const f={dayShift1:t.dayShift1,dayShift2:t.dayShift2,nightShift1:t.nightShift1,nightShift2:t.nightShift2,dayShift1Name:t.dayShift1Name,dayShift2Name:t.dayShift2Name,nightShift1Name:t.nightShift1Name,nightShift2Name:t.nightShift2Name};this.localData[a]=f,localStorage.setItem(a,JSON.stringify(f)),this.madeChanges=!0,this.$nextTick(()=>{this.editedShifts[i]=void 0,delete this.editedShifts[i],this.$forceUpdate()});return}const d=this.people.find(f=>f.id===e);if(h.includes("D")){if(d?.ratownik&&[t.dayShift1,t.dayShift2].filter(Boolean).some(y=>this.people.find(m=>m.id===y)?.ratownik&&y!==e)){r("Nie można przypisać dwóch ratowników na zmianę dzienną."),delete this.editedShifts[i];return}if(h==="D"&&o!=="D N"){if(t.dayShift1===e||t.dayShift2===e){r("Ta osoba już ma zmianę dzienną."),delete this.editedShifts[i];return}if(!t.dayShift1)t.dayShift1=e,t.dayShift1Name=d.name,t.dayShift1UserChanged=!0;else if(!t.dayShift2)t.dayShift2=e,t.dayShift2Name=d.name,t.dayShift2UserChanged=!0;else{r("Nie można przypisać więcej niż dwóch osób na zmianę dzienną."),delete this.editedShifts[i];return}}else if(h==="D N"&&!(t.dayShift1===e||t.dayShift2===e))if(!t.dayShift1)t.dayShift1=e,t.dayShift1Name=d.name,t.dayShift1UserChanged=!0;else if(!t.dayShift2)t.dayShift2=e,t.dayShift2Name=d.name,t.dayShift2UserChanged=!0;else{r("Nie można przypisać więcej niż dwóch osób na zmianę dzienną."),delete this.editedShifts[i];return}}if(h.includes("N")){if(d?.ratownik&&[t.nightShift1,t.nightShift2].filter(Boolean).some(y=>this.people.find(m=>m.id===y)?.ratownik&&y!==e)){r("Nie można przypisać dwóch ratowników na zmianę nocną."),delete this.editedShifts[i];return}if(h==="N"&&o!=="D N"){if(t.nightShift1===e||t.nightShift2===e){r("Ta osoba już ma zmianę nocną."),delete this.editedShifts[i];return}if(!t.nightShift1)t.nightShift1=e,t.nightShift1Name=d.name,t.nightShift1UserChanged=!0;else if(!t.nightShift2)t.nightShift2=e,t.nightShift2Name=d.name,t.nightShift2UserChanged=!0;else{r("Nie można przypisać więcej niż dwóch osób na zmianę nocną."),delete this.editedShifts[i];return}}else if(h==="D N"&&!(t.nightShift1===e||t.nightShift2===e))if(!t.nightShift1)t.nightShift1=e,t.nightShift1Name=d.name,t.nightShift1UserChanged=!0;else if(!t.nightShift2)t.nightShift2=e,t.nightShift2Name=d.name,t.nightShift2UserChanged=!0;else{r("Nie można przypisać więcej niż dwóch osób na zmianę nocną."),delete this.editedShifts[i];return}}const g={dayShift1:t.dayShift1,dayShift2:t.dayShift2,nightShift1:t.nightShift1,nightShift2:t.nightShift2};this.localData[a]=g,this.madeChanges=!0,localStorage.setItem(a,JSON.stringify(g)),delete this.editedShifts[i]},generateMonthDays(){const e=this.selectedYear,n=this.selectedMonth,i=new Date(e,n+1,0).getDate();this.monthDays=[];for(let h=1;h<=i;h++)this.monthDays.push({date:new Date(e,n,h),dayShift1:null,dayShift2:null,nightShift1:null,nightShift2:null,dayShift1Name:"Not assigned",dayShift2Name:"Not assigned",nightShift1Name:"Not assigned",nightShift2Name:"Not assigned",isCurrentMonth:!0});this.loadFromLocalStorage(),this.$emit("month-days-updated",this.monthDays)},updateChanges(e){this.madeChanges=e,this.$emit("has-changes",e)},loadFromLocalStorage(){const e=this.selectedYear,n=this.selectedMonth;for(let i=1;i<=31;i++){const h=new Date(e,n,i).toDateString(),o=localStorage.getItem(h);if(o)try{const s=JSON.parse(o),a=this.monthDays.find(t=>t.date.toDateString()===h);a&&(a.dayShift1=s.dayShift1,a.dayShift2=s.dayShift2,a.nightShift1=s.nightShift1,a.nightShift2=s.nightShift2,a.dayShift1Name=s.dayShift1Name||"Not assigned",a.dayShift2Name=s.dayShift2Name||"Not assigned",a.nightShift1Name=s.nightShift1Name||"Not assigned",a.nightShift2Name=s.nightShift2Name||"Not assigned")}catch(s){console.error("Failed to load local data:",s),r("Nie udało się załadować danych lokalnych. Sprawdź konsolę.","red")}}},resolvePersonName(e){const n=this.people.find(i=>i.id===e);return n?{name:n.name,isRatownik:n.ratownik}:{name:void 0,isRatownik:!1}},async fetchServerShiftData(){this.syncedChanges={};try{const e=await fetch("https://mc.kot.li/?key=shiftData.json",{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok)throw e.status===404&&(console.error("Nie znaleziono harmonogramu na serwerze"),r("Nie znaleziono harmonogramu na serwerze","red")),new Error(console.error(`Nie udało się połączyć z serwerem: ${e.status}`),r(`Nie udało się połączyć z serwerem: ${e.status}`,"red"));return await e.json()}catch(e){return console.error("Error fetching data from server:",e),r("Failed to fetch data from server","red"),null}},async checkShiftDataSync(){this.resetSyncedChangesSessionStorage();const e=await this.fetchServerShiftData();if(!e){console.log("No remote data fetched.");return}const n={};for(const[i,h]of Object.entries(e)){const o=localStorage.getItem(i),s=o?JSON.parse(o):null,a={};if(!s)n[i]={...h},localStorage.setItem(i,JSON.stringify(h));else{for(const[t,d]of Object.entries(h)){const g=s[t]||null;g!==d&&(a[t]={from:g||"Empty",to:d||"Empty"})}Object.keys(a).length>0&&(n[i]=a),localStorage.setItem(i,JSON.stringify(h))}}this.generateMonthDays(),this.syncedChanges=n,sessionStorage.setItem("syncedChanges",JSON.stringify(this.syncedChanges)),setTimeout(()=>{this.syncedChanges={},sessionStorage.removeItem("syncedChanges")},5e3)},resetSyncedChangesSessionStorage(){const e=sessionStorage.getItem("syncedChanges");e&&(this.syncedChanges=JSON.parse(e),setTimeout(()=>{this.syncedChanges={},sessionStorage.removeItem("syncedChanges")},5e3))},handleScroll(e){this.scrollContainer&&(e.preventDefault(),this.scrollContainer.scrollLeft+=e.deltaY)}},mounted(){this.generateMonthDays(),this.scrollContainer=this.$refs.scrollContainer}},j={class:"spreadsheet-view"},U={class:"calendar-table"},_=["onClick","aria-label","title"],E={key:0},P=["onUpdate:modelValue","onChange"];function V(e,n,i,h,o,s){return S(),c("div",j,[l("div",{class:"scrollable-container",onWheel:n[0]||(n[0]=v((...a)=>s.handleScroll&&s.handleScroll(...a),["prevent"])),ref:"scrollContainer"},[l("table",U,[l("thead",null,[l("tr",null,[n[1]||(n[1]=l("th",null,null,-1)),(S(!0),c(u,null,N(s.daysInMonth,a=>(S(),c("th",{key:a,class:D({"nd-color":o.daysOfWeek[new Date(i.selectedYear,i.selectedMonth,a).getDay()]==="Nd","sob-color":o.daysOfWeek[new Date(i.selectedYear,i.selectedMonth,a).getDay()]==="Sob"})},w(a),3))),128))])]),l("tbody",null,[(S(!0),c(u,null,N(s.orderedPeople,a=>(S(),c("tr",{key:a.id},[l("td",{class:D({ratownik:a.ratownik,pielegniarka:!a.ratownik})},w(a.name),3),(S(!0),c(u,null,N(s.daysInMonth,t=>(S(),c("td",{key:t,class:D(["editable-cell",{"nd-color":o.daysOfWeek[new Date(i.selectedYear,i.selectedMonth,t).getDay()]==="Nd","sob-color":o.daysOfWeek[new Date(i.selectedYear,i.selectedMonth,t).getDay()]==="Sob"}]),onClick:d=>s.editCell(a.id,t),"aria-label":i.isEditingMode?"Kliknij aby edytować zmianę":"",title:i.isEditingMode?"Kliknij aby edytować zmianę":"",role:"gridcell"},[!i.isEditingMode||!s.isEditing(a.id,t)?(S(),c("span",E,w(s.getShiftForPersonAndDay(a.id,t)||""),1)):b((S(),c("select",{key:1,"onUpdate:modelValue":d=>o.editedShifts[`${a.id}-${t}`]=d,onChange:d=>s.saveShift(a.id,t)},n[2]||(n[2]=[l("option",{value:""},null,-1),l("option",{value:"D"},"D",-1),l("option",{value:"N"},"N",-1),l("option",{value:"D N"},"D N",-1)]),40,P)),[[M,o.editedShifts[`${a.id}-${t}`]]])],10,_))),128))]))),128))])])],544)])}const T=p(O,[["render",V],["__scopeId","data-v-a04388b9"]]);export{T as default};
